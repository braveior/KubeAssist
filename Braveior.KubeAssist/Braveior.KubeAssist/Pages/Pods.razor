@page "/pods"

@using Braveior.KubeAssist.Services
@using Braveior.KubeAssist.Services.Models
@inject KubernetesService KubernetesService
@inject NavigationManager NavigationManager

<MudTable Dense="true" Items="@PodList" Hover="true" Breakpoint="Breakpoint.Sm">
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Namespace</MudTh>
        <MudTh>UID</MudTh>
        <MudTh>PodIP</MudTh>
        <MudTh>StartTime</MudTh>
        <MudTh>CreatedTime</MudTh>
        <MudTh>Status</MudTh>
        <MudTh>Readiness</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd><MudButton Variant="Variant.Outlined" Size="MudBlazor.Size.Small" OnClick="@(() => NavigatePodDetails(context.UID))">Pod Details</MudButton></MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Namespace">@context.Namespace</MudTd>
        <MudTd DataLabel="UID">@context.UID</MudTd>
        <MudTd DataLabel="PodIP">@context.PodIP</MudTd>
        <MudTd DataLabel="StartTime">@context.StartTime</MudTd>
        <MudTd DataLabel="CreatedTime">@context.CreatedTime</MudTd>
        <MudTd DataLabel="Status">@context.Status</MudTd>
        <MudTd DataLabel="Readiness">@context.Readiness</MudTd>
    </RowTemplate>

</MudTable>


@code
{
    [Inject]
    private IState<KubeStateState> KubeStateState { get; set; }

    protected override void OnInitialized()
    {
        LoadPods();
        base.OnInitialized();
    }

    private void LoadPods()
    {
        if (KubeStateState.Value.KubeState != null)
        {
            PodList = KubeStateState.Value.KubeState.Pods;
        }
    }
    private static IEnumerable<Pod> PodList { get; set; }

    private void NavigatePodDetails(string uid)
    {
        NavigationManager.NavigateTo($"/poddetail/{uid}");
    }

}
