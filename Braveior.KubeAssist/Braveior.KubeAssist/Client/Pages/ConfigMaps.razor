@page "/configmaps"

@using Braveior.KubeAssist.Services
@using Braveior.KubeAssist.Services.Models
@inject IKubernetesService KubernetesService
@inject NavigationManager NavigationManager

<MudTable Dense="true" Items="@ConfigMapList" Hover="true" Breakpoint="Breakpoint.Sm">
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Namespace</MudTh>
        <MudTh>Kind</MudTh>
        <MudTh>Immutable</MudTh>
        <MudTh>Created Date</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd><MudButton Variant="Variant.Outlined" Size="MudBlazor.Size.Small" OnClick="@(() => NavigateConfigMapDetails(context.Metadata.Name))">Details</MudButton></MudTd>
        <MudTd DataLabel="Name">@context.Metadata.Name</MudTd>
        <MudTd DataLabel="Namespace">@context.Metadata.NamespaceProperty</MudTd>
        <MudTd DataLabel="Kind">@context.Kind</MudTd>
        <MudTd DataLabel="Immutable">@context.Immutable</MudTd>
        <MudTd DataLabel="CreatedDate">@context.Metadata.CreationTimestamp</MudTd>
    </RowTemplate>
</MudTable>


@code
{
    private bool isVisible;
    protected override async Task OnInitializedAsync()
    {
        ToggleOverlay(true);
        await LoadConfigMaps();
        ToggleOverlay(false);
        await base.OnInitializedAsync();
    }

    private async Task LoadConfigMaps()
    {
        var configmaps = await KubernetesService.GetConfigMaps("default");
        if (configmaps.Items != null)
        {
            ConfigMapList = configmaps.Items.ToList();
        }
        StateHasChanged();
    }
    private static List<V1ConfigMap> ConfigMapList { get; set; }

    private void NavigateConfigMapDetails(string name)
    {
        NavigationManager.NavigateTo($"/configmapdetail/{name}");
    }
    private void ToggleOverlay(bool visible)
    {
        isVisible = visible;
        StateHasChanged();
    }
}
