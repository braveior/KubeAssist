@page "/deps"

@using Braveior.KubeAssist.Services
@using Braveior.KubeAssist.Services.Models
@inject IKubernetesService KubernetesService
@inject NavigationManager NavigationManager
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<MudTable Dense="true" Items="@DeploymentList" Hover="true" Breakpoint="Breakpoint.Sm">
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Namespace</MudTh>
        <MudTh>Total Replicas</MudTh>
        <MudTh>Available Replicas</MudTh>
        <MudTh>Created Date</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd><MudButton Variant="Variant.Outlined" Size="MudBlazor.Size.Small" OnClick="@(() => NavigateDeploymentDetails(context.Metadata.Name))">Details</MudButton></MudTd>
        <MudTd DataLabel="Name">@context.Metadata.Name</MudTd>
        <MudTd DataLabel="Namespace">@context.Metadata.NamespaceProperty</MudTd>
        <MudTd DataLabel="TotalReplicas">@context.Status.Replicas</MudTd>
        <MudTd DataLabel="AvailableReplicas">@context.Status.AvailableReplicas</MudTd>
        <MudTd DataLabel="CreatedDate">@context.Metadata.CreationTimestamp</MudTd>
    </RowTemplate>
</MudTable>


@code
{
    private string Namespace = "default";

    private static List<V1Deployment> DeploymentList { get; set; } = new List<V1Deployment>();

    private bool isVisible;

    [Inject]
    private IState<GlobalDataState> CommonState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ToggleOverlay(true);
        if (CommonState.Value.KNamespace != null)
        {
            Namespace = CommonState.Value.KNamespace;
        }
        await LoadDeployments();
        ToggleOverlay(false);
        await base.OnInitializedAsync();
    }

    private async Task LoadDeployments()
    {

        var deployments = await KubernetesService.GetDeployments(Namespace);
        if (deployments.Items != null)
        {
            DeploymentList = deployments.Items.ToList();
        }
        StateHasChanged();

    }

    private void NavigateDeploymentDetails(string name)
    {
        NavigationManager.NavigateTo($"/deploymentdetail/{name}");
    }
    private void ToggleOverlay(bool visible)
    {
        isVisible = visible;
        StateHasChanged();
    }
}
